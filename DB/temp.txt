#1.1
CREATE TABLE student(SNO INT,
                    SNAME CHAR(8),
                    SEX CHAR(2),
                    DEPNO INT);

CREATE  TABLE Course(CNO INT ,
                    CNAME CHAR(20),
                    TNO INT ,
                    CREDIT INT,
                    PRIMARY KEY (CNO)
                    );


CREATE TABLE SC(SNO INT ,
                CNO INT,
                GRADE INT);

DROP TABLE IF EXISTS Teacher;
CREATE  TABLE Teacher(TNO int  ,
                        TNAME CHAR(8) NOT NULL,
                        DEPTNO INT,
                        PRIMARY KEY(TNO));

CREATE TABLE Dept(DEPTNO INT,
                    DNAME CHAR(20),
                    PRIMARY KEY(DEPTNO));

#1.2
ALTER TABLE student ADD  SAGE INT;
ALTER TABLE student CHANGE SAGE SAGE SMALLINT; 

#1.3
DROP TABLE IF EXISTS Dept;
DROP TABLE IF EXISTS SC;
DROP TABLE IF EXISTS Course;
DROP TABLE  IF EXISTS student;
DROP TABLE IF EXISTS Teacher;

#2.1
ALTER TABLE student ADD UNIQUE (SNO);
ALTER TABLE Course add UNIQUE (CNO ASC );

#2.2
ALTER TABLE student DROP INDEX  SNO;

ALTER  TABLE Course DROP INDEX TNO;

#3.1.1
INSERT INTO student 
    VALUES (1001,'张天','男',10,20),
            (1002,'李兰','女',10,21),
            (1003,'陈铭','男',10,21),
            (1004,'刘茜','女',20,21),
            (1005,'马朝阳','男',20,22);

#3.1.2
INSERT  INTO Course
    VALUES  (1,'数据结构',101,4),
            (2,'数据库',102,4),
            (3,'离散数学',103,4),
            (4,'C语言',101,2);

#3.1.3
INSERT  INTO SC
    VALUES  (1001,1,80),
            (1001,2,85),
            (1001,3,78),
            (1002,1,78),
            (1002,2,82),
            (1002,3,86),
            (1003,1,92),
            (1003,3,90),
            (1004,1,87),
            (1004,4,90),
            (1005,1,85),
            (1005,4,92);

#3.1.4
INSERT INTO Teacher
    VALUES  (101,'张星',10),
            (102,'李珊',10),
            (103,'赵天应',10),
            (104,'刘田',20);
#3.1.5
INSERT  INTO Dept
    VALUES  (10,'计算机'),
            (20,'信息');

#3.2
UPDATE SC SET GRADE=GRADE+2 
    WHERE CNO IN (
        SELECT CNO 
            FROM Course
                WHERE CNAME='数据结构' AND TNO IN (
                    SELECT TNO 
                        FROM Teacher
                            WHERE TNAME='张星'
                )
    );

#3.3
DELETE FROM SC 
    WHERE SNO=(
        SELECT SNO 
            FROM student
                WHERE SNAME='马朝阳'
    );

#4.1.1
SELECT * FROM student;
#4.1.2
SELECT * 
    FROM student
        WHERE SEX='女';cou

#4.1.3
SELECT * 
    FROM SC
        WHERE GRADE BETWEEN 80 AND 89
            ORDER BY GRADE DESC;

#4.1.4
SELECT DEPNO ,COUNT(*)  FROM student GROUP BY DEPNO;

#4.2
SELECT SNAME,SAGE FROM student
    WHERE SAGE<=21 AND SEX='女';

#4.3.1
SELECT SC.SNO, SUM(Course.CREDIT)
    FROM SC,Course
        WHERE SC.CNO=Course.CNO 
            GROUP BY SC.SNO
        HAVING SUM(Course.CREDIT)<10;
    
#4.3.2
SELECT student.SNAME,Course.CNAME,t1.GRADE
FROM student,Course,(SELECT *
FROM SC
WHERE
    SC.GRADE IN(
        SELECT MAX(SC.GRADE)
            FROM SC
                GROUP BY SC.CNO))t1
    WHERE student.SNO=t1.SNO and Course.CNO=t1.CNO;

#4.3.3

SELECT DISTINCT SCX.SNO
FROM SC SCX
WHERE  NOT EXISTS 
(SELECT * 
    FROM SC SCY
        WHERE SCY.SNO=1001 AND not EXISTS(
            SELECT * 
                FROM SC SCZ
                    WHERE SCZ.SNO=SCX.SNO AND SCZ.CNO=SCY.CNO
        )
);

#4.3.4
SELECT  DISTINCT SCX.SNO
FROM SC SCX,student s1,Teacher t1
WHERE ;

SELECT * 
FROM SC SCX
WHERE NOT EXISTS (
    SELECT *
        FROM SC SCY,
            WHERE 
);

SELECT *
FROM SC 
WHERE SC.CNO IN(
SELECT Course.CNO
FROM Course,Teacher
where Teacher.TNAME='张星' AND Teacher.TNO=Course.TNO);

